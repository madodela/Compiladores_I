TKN_PROGRAM	program	1
TKN_LBRACE	{	1
TKN_INT	int	2
TKN_ID	a	2
TKN_COMMA	,	2
TKN_ID	b	2
TKN_COMMA	,	2
TKN_ID	c	2
TKN_COMMA	,	2
TKN_NUM	2	2
TKN_ID	d	2
TKN_SEMICOLON	;	2
TKN_WRITE	write	3
TKN_ID	x	3
TKN_ADD	+	3
TKN_NUM	2	3
TKN_PRODUCT	*	3
TKN_NUM	3	3
TKN_SEMICOLON	;	3
TKN_IF	if	4
TKN_LPARENT	(	4
TKN_ID	x	4
TKN_EQUAL	==	4
TKN_ID	y	4
TKN_RPARENT	)	4
TKN_LBRACE	{	4
TKN_DO	do	5
TKN_LBRACE	{	5
TKN_READ	read	6
TKN_ID	y	6
TKN_SEMICOLON	;	6
TKN_ID	a	7
TKN_ASSIGN	=	7
TKN_ID	d	7
TKN_ADD	+	7
TKN_NUM	3.4	7
TKN_PRODUCT	*	7
TKN_ID	a	7
TKN_PRODUCT	*	7
TKN_NUM	3	7
TKN_DIVISION	/	7
TKN_ID	c	7
TKN_SEMICOLON	;	7
TKN_IF	if	8
TKN_LPARENT	(	8
TKN_ID	a	8
TKN_GETHAN	>=	8
TKN_NUM	0	8
TKN_RPARENT	)	8
TKN_LBRACE	{	8
TKN_READ	read	9
TKN_ID	a	9
TKN_SEMICOLON	;	9
TKN_WRITE	write	10
TKN_ID	a	10
TKN_PRODUCT	*	10
TKN_NUM	1	10
TKN_ADD	+	10
TKN_NUM	3	10
TKN_DIVISION	/	10
TKN_NUM	4.0	10
TKN_SEMICOLON	;	10
TKN_RBRACE	}	11
TKN_FI	fi	12
TKN_RBRACE	}	12
TKN_UNTIL	until	12
TKN_LPARENT	(	12
TKN_ID	d	12
TKN_LTHAN	<	12
TKN_ID	a	12
TKN_RPARENT	)	12
TKN_SEMICOLON	;	12
TKN_WRITE	write	13
TKN_ID	y	13
TKN_SEMICOLON	;	13
TKN_RBRACE	}	14
TKN_ELSE	else	15
TKN_LBRACE	{	15
TKN_WRITE	write	16
TKN_ID	z	16
TKN_SEMICOLON	;	16
TKN_RBRACE	}	17
TKN_FI	fi	19
TKN_RBRACE	}	19
TKN_EOF	$	19
